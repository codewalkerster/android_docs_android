From 9d0e577242b54c8309e9c9d22e8c00d253cc4fa5 Mon Sep 17 00:00:00 2001
From: Zorro Liu <lyx@rock-chips.com>
Date: Mon, 21 Feb 2022 19:57:25 +0800
Subject: [PATCH 1/3] einkcompositorworker: add waveform check

Signed-off-by: Zorro Liu <lyx@rock-chips.com>
Change-Id: Ic6c36d9de5f87c95f24fb0901d9a10fb4fee796b
---
 einkcompositorworker.cpp | 44 +++++++++++++++++++++++++++++++---------
 1 file changed, 34 insertions(+), 10 deletions(-)

diff --git a/einkcompositorworker.cpp b/einkcompositorworker.cpp
index 33522d3..f03b496 100755
--- a/einkcompositorworker.cpp
+++ b/einkcompositorworker.cpp
@@ -104,17 +104,37 @@ EinkCompositorWorker::~EinkCompositorWorker() {
     free(gray256_old_buffer);
 }
 
-const char *pvi_wf_get_version(const char *waveform)
+static int pvi_check_wf(const char *waveform)
 {
-	static char spi_id_buffer[32];
-	int i;
-
-	for (i = 0; i < 31; i++)
-		spi_id_buffer[i] = waveform[i + 0x41];
-
-	spi_id_buffer[31] = '\0';
+	unsigned char mode_version;
+	int ret = -1;
+
+	if (!waveform)
+		return -1;
+
+	mode_version = waveform[16];
+
+	switch (mode_version) {
+	case 0x43:
+	case 0x16:
+	case 0x18:
+	case 0x19:
+	case 0x20:
+	case 0x48:
+		ret = 0;
+		break;
+	case 0x09:
+	case 0x12:
+	case 0x23:
+	case 0x54:
+		ret = -1;
+		break;
+	default:
+		ret = -1;
+		break;
+	}
 
-	return (const char *)spi_id_buffer;
+	return ret;
 }
 
 int EinkCompositorWorker::Init(struct hwc_context_t *ctx) {
@@ -178,7 +198,11 @@ int EinkCompositorWorker::Init(struct hwc_context_t *ctx) {
       goto OUT;
   }
 
-  ALOGD("waveform version: %s\n", pvi_wf_get_version((char *)waveform_base));
+  ret = pvi_check_wf((char *)waveform_base);
+  if (ret) {
+      ALOGE("pvi check wf failed\n");
+      goto OUT;
+  }
   ret = EInk_Init((char *)waveform_base);
   if (ret) {
       ALOGE("EInk_Init error, ret = %d\n", ret);
-- 
2.17.1

